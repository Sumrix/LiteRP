<div class="relative group rounded-lg border border-gray-200 bg-white shadow-sm dark:border-gray-700 dark:bg-gray-800
        hover:shadow-lg hover:shadow-black/10 dark:hover:shadow-slate-900/30
        overflow-hidden aspect-2/3
        transition-shadow duration-200 ease-out">

    <CharacterAvatar Character="Character" SizeToken="lg"
                     Class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300 ease-in-out" />

    <div class="absolute bottom-0 left-0 right-0 h-2/5 bg-gradient-to-t from-black/75 to-transparent pointer-events-none"></div>
    
    <div class="absolute inset-0 flex flex-col justify-end p-4">
        <p class="text-xl font-bold text-white drop-shadow-md">
            @Character.Name
        </p>
    </div>

    <a class="absolute inset-0 cursor-pointer"
       title="Chat with @Character.Name"
       @onclick="() => OnChat.InvokeAsync(Character)"
       aria-label="Chat with @Character.Name"></a>

    <div class="absolute right-2 top-2 flex flex-col justify-start opacity-0 group-hover:opacity-100">
        <LrpButton Variant="LrpButtonStyle.Overlay"
                   Color="LrpButtonColor.Grey"
                   OnClick="() => OnView.InvokeAsync(Character)"
                   Icon="IconTypes.ProfileCardSolid"
                   title="View Profile" />
        <LrpButton Variant="LrpButtonStyle.Overlay"
                   Color="LrpButtonColor.Grey"
                   OnClick="() => OnDelete.InvokeAsync(Character)"
                   Icon="IconTypes.TrashBin"
                   title="Delete Character" />
    </div>
</div>

@code
{
    [Parameter, EditorRequired]
    public required Character Character { get; set; }

    [Parameter]
    public EventCallback<Character> OnChat { get; set; }

    [Parameter]
    public EventCallback<Character> OnView { get; set; }

    [Parameter]
    public EventCallback<Character> OnDelete { get; set; }
}
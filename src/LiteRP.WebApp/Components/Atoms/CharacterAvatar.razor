@using LiteRP.WebApp.Utilities
@using Microsoft.Extensions.Options
@inject IOptions<AvatarOptions> AvatarSettings

@if (Character is { HasAvatar: true })
{
    <img class="@ImageClasses"
         src="@_src"
         srcset="@_srcSet"
         loading="lazy"
         @attributes="AdditionalAttributes" />
}
else
{
    <img class="@ImageClasses"
         src="@UrlManager.AvatarPlaceholderUrl"
         loading="lazy" 
         @attributes="AdditionalAttributes"/>
}


@code {
    [Parameter]
    public Character? Character { get; set; }

    /// <summary>
    /// Avatar size token (sm, md, lg, xl).
    /// </summary>
    [Parameter, EditorRequired]
    public required string SizeToken { get; set; }

    [Parameter]
    public string Class { get; set; } = string.Empty;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    private string _baseUrl = string.Empty;
    private string _src = string.Empty;
    private string _srcSet = string.Empty;

    private string ImageClasses => new CssBuilder("w-full h-full object-cover")
        .AddClass(Class)
        .Build();

    protected override void OnParametersSet()
    {
        if (Character is null) return;

        _baseUrl = $"/characters/{Character.Id}/avatar/{SizeToken}?v={Character.AvatarVersion}";
        _src = $"{_baseUrl}&dpr=1";
        _srcSet = string.Join(", ", AvatarSettings.Value.AllowedMultipliers.Select(m => $"{_baseUrl}&dpr={m} {m}x"));
    }
}
@using Microsoft.Extensions.Options
@inherits FlowbiteComponentBase

@if (Character is { HasAvatar: true })
{
    <img class="@_imageClasses"
         src="@_src"
         srcset="@_srcSet"
         loading="lazy"
         @attributes="AdditionalAttributes" />
}
else
{
    <img class="@_imageClasses"
         src="@UrlManager.AvatarPlaceholderUrl"
         loading="lazy" 
         @attributes="AdditionalAttributes"/>
}


@code {
    [Parameter]
    public Character? Character { get; set; }

    /// <summary>
    /// Avatar size token ("s", "m", "l").
    /// </summary>
    [Parameter, EditorRequired]
    public required string SizeToken { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? AdditionalAttributes { get; set; }

    [Inject]
    public required IOptions<AvatarSettings> AvatarSettings { get; set; }

    private string _baseUrl = string.Empty;
    private string _src = string.Empty;
    private string _srcSet = string.Empty;

    private string _imageClasses => CombineClasses("w-full h-full object-cover");

    protected override void OnParametersSet()
    {
        if (Character is null) return;

        _baseUrl = $"/characters/{Character.Id}/avatar/{SizeToken}?v={Character.AvatarVersion}";
        _src = $"{_baseUrl}&dpr=1";
        _srcSet = string.Join(", ", AvatarSettings.Value.AllowedMultipliers.Select(m => $"{_baseUrl}&dpr={m} {m}x"));
    }
}